version: 2.1

setup_command: &setup_command
  command: |
    echo 'export PATH=$PATH:${CIRCLE_WORKING_DIRECTORY}/bin' >> $BASH_ENV

executors:
  backend-executor:
    docker:
      - image: circleci/python:3.9.0
        environment:
          PYTHONBUFFERED: 1
          SECRET_KEY: SECRET_KEY
          DATABASE_ENGINE: django.db.backends.postgresql
          DATABASE_HOST: db
          DATABASE_PORT: 5432
          POSTGRES_USER: dbuser
          POSTGRES_PASSWORD: dbpassword
          POSTGRES_DB: postgreDB
      - image: circleci/postgres:9.6.2-alpine
        environment:
          POSTGRES_USER: dbuser
          POSTGRES_PASSWORD: dbpassword
          POSTGRES_DB: postgreDB
  frontend-executor:
    docker:
      - image: circleci/node:14.14.0

commands:
  save_python_package:
    description: "pip install して package をキャッシュ"
    steps:
      - save_cache:
          name: Save python package
          key: deps-{{ .Branch }}-{{ checksum "requirements.txt" }}
          paths:
            - /usr/local/bin
            - /usr/local/lib/python3.9/site-packages
  restore_python_package:
    description: "package キャッシュを読み込む"
    steps:
      - restore_cache:
          name: Restore Python package
          keys: 
            - deps-back-{{ .Branch }}-{{ checksum "requirements.txt" }}
            - deps-back-
  pip_install:
    description: "pip install を実行"
    steps:
      - run:
          name: pip install
          command: pip3 install -r requirements.txt
  save_node_modules:
    description: "node_modules をキャッシュ"
    steps:
      - save_cache:
          name: Save node_modules
          key: deps-{{ .Branch }}-{{ checksum "yarn.lock "}}
          paths:
            - frontend/node_modules
  restore_node_modules:
    description: "node_modules を読み込む"
    steps:
      - restore_cache:
          name: Restore node_modules
          keys:
            - deps-front-{{ .Branch }}-{{ checksum "yarn.lock "}}
            - deps-front-
  yarn_install:
    description: "yarn install を実行"
    steps:
      - run:
          name: yarn install
          command: npm install -g yarn
      - run:
          name: node_modules install
          command: yarn

jobs:
  backend_build:
    working_directory: ~/backend
    executor: backend-executor
    steps:
    - checkout
    - run:
        <<: *setup_command
    - run:
        name: backend diff
        command: |
          if ! is_changed_dir "~/backend/"; then
            circleci step halt
          fi
    - run: sudo chown -R circleci:circleci /usr/local/bin
    - run: sudo chown -R circleci:circleci /usr/local/lib/python3.9/site-packages
    - restore_python_package
    - pip_install
    - save_python_package
    - run: python backend/manage.py test
    - store_test_results:
        path: test-results
    - store_artifacts:
        path: test-reports
  frontend_build:
    working_directory: ~/frontend
    executor: frontend-executor
    steps:
    - checkout
    - run:
        <<: *setup_command
    - run:
        name: frontend diff
        command: |
          if ! is_changed_dir "~/frontend/"; then
            circleci step halt
          fi
    - restore_node_modules
    - yarn_install
    - save_node_modules
    - run: yarn test
    - store_test_results:
        path: test-results
    - store_artifacts:
        path: test-reports

workflows:
  version: 2.1
  backend-test:
    jobs:
    - backend_build
  frontend-test:
    jobs:
    - frontend_build
